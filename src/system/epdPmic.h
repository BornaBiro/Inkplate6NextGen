#ifndef __EPDPMIC_H__
#define __EPDPMIC_H__

// Include Arduino Header file.
#include "Arduino.h"

// Include Arduino I2C library
#include <Wire.h>

// TPS65186 PMIC I2C Address
#define TPS_PMIC_ADDR   0x48

// TPS65186 Registers
#define TPS65186_TMST_VALUE 0x00
#define TPS65186_ENABLE     0x01
#define TPS65186_VADJ       0x02
#define TPS65186_VCOM1      0x03
#define TPS65186_VCOM2      0x04
#define TPS65186_INT_EN1    0x05
#define TPS65186_INT_EN2    0x06
#define TPS65186_INT1       0x07
#define TPS65186_INT2       0x08
#define TPS65186_UPSEQ0     0x09
#define TPS65186_UPSEQ1     0x0A
#define TPS65186_DWNSEQ0    0x0B
#define TPS65186_DWNSEQ1    0x0C
#define TPS65186_TMST1      0x0D
#define TPS65186_TMST2      0x0E
#define TPS65186_PG         0x0F
#define TPS65186_REVID      0x10

// Power up sequence defines
#define TPS65186_VDDH_UPSEQ_1   0b00000000
#define TPS65186_VDDH_UPSEQ_2   0b01000000
#define TPS65186_VDDH_UPSEQ_3   0b10000000
#define TPS65186_VDDH_UPSEQ_4   0b11000000

#define TPS65186_VPOS_UPSEQ_1  0b00000000
#define TPS65186_VPOS_UPSEQ_2  0b00010000
#define TPS65186_VPOS_UPSEQ_3  0b00100000
#define TPS65186_VPOS_UPSEQ_4  0b00110000

#define TPS65186_VEE_UPSEQ_1    0b00000000
#define TPS65186_VEE_UPSEQ_2    0b00000100
#define TPS65186_VEE_UPSEQ_3    0b00001000
#define TPS65186_VEE_UPSEQ_4    0b00001100

#define TPS65186_VNEG_UPSEQ_1   0b00000000
#define TPS65186_VNEG_UPSEQ_2   0b00000001
#define TPS65186_VNEG_UPSEQ_3   0b00000010
#define TPS65186_VNEG_UPSEQ_4   0b00000011

// Power down sequence defines
#define TPS65186_VDDH_DWNSEQ_1   0b00000000
#define TPS65186_VDDH_DWNSEQ_2   0b01000000
#define TPS65186_VDDH_DWNSEQ_3   0b10000000
#define TPS65186_VDDH_DWNSEQ_4   0b11000000

#define TPS65186_VPOS_DWNSEQ_1  0b00000000
#define TPS65186_VPOS_DWNSEQ_2  0b00010000
#define TPS65186_VPOS_DWNSEQ_3  0b00100000
#define TPS65186_VPOS_DWNSEQ_4  0b00110000

#define TPS65186_VEE_DWNSEQ_1    0b00000000
#define TPS65186_VEE_DWNSEQ_2    0b00000100
#define TPS65186_VEE_DWNSEQ_3    0b00001000
#define TPS65186_VEE_DWNSEQ_4    0b00001100

#define TPS65186_VNEG_DWNSEQ_1   0b00000000
#define TPS65186_VNEG_DWNSEQ_2   0b00000001
#define TPS65186_VNEG_DWNSEQ_3   0b00000010
#define TPS65186_VNEG_DWNSEQ_4   0b00000011

// Power up delay defines
#define TPS65186_UPSEQ_STB3_STB4_3MS    0b00000000
#define TPS65186_UPSEQ_STB3_STB4_6MS    0b01000000
#define TPS65186_UPSEQ_STB3_STB4_9MS    0b10000000
#define TPS65186_UPSEQ_STB3_STB4_12MS   0b11000000

#define TPS65186_UPSEQ_STB2_STB3_3MS    0b00000000
#define TPS65186_UPSEQ_STB2_STB3_6MS    0b00010000
#define TPS65186_UPSEQ_STB2_STB3_9MS    0b00100000
#define TPS65186_UPSEQ_STB2_STB3_12MS   0b00110000

#define TPS65186_UPSEQ_STB1_STB2_3MS    0b00000000
#define TPS65186_UPSEQ_STB1_STB2_6MS    0b00000100
#define TPS65186_UPSEQ_STB1_STB2_9MS    0b00001000
#define TPS65186_UPSEQ_STB1_STB2_12MS   0b00001100

#define TPS65186_UPSEQ_STB0_STB1_3MS    0b00000000
#define TPS65186_UPSEQ_STB0_STB1_6MS    0b00000001
#define TPS65186_UPSEQ_STB0_STB1_9MS    0b00000010
#define TPS65186_UPSEQ_STB0_STB1_12MS   0b00000011

// Power down delay defines
#define TPS65186_DWNSEQ_STB3_STB4_6MS   0b00000000
#define TPS65186_DWNSEQ_STB3_STB4_12MS  0b01000000
#define TPS65186_DWNSEQ_STB3_STB4_24MS  0b10000000
#define TPS65186_DWNSEQ_STB3_STB4_48MS  0b11000000

#define TPS65186_DWNSEQ_STB2_STB3_6MS   0b00000000
#define TPS65186_DWNSEQ_STB2_STB3_12MS  0b00010000
#define TPS65186_DWNSEQ_STB2_STB3_24MS  0b00100000
#define TPS65186_DWNSEQ_STB2_STB3_48MS  0b00110000

#define TPS65186_DWNSEQ_STB1_STB2_6MS   0b00000000
#define TPS65186_DWNSEQ_STB1_STB2_12MS  0b00000100
#define TPS65186_DWNSEQ_STB1_STB2_24MS  0b00001000
#define TPS65186_DWNSEQ_STB1_STB2_48MS  0b00001100

#define TPS65186_DWNSEQ_STB0_STB1_3MS   0b00000000
#define TPS65186_DWNSEQ_STB0_STB1_6MS   0b00000010

#define TPS65186_DWNSEQ_DLY_MUL_1       0b00000000
#define TPS65186_DWNSEQ_DLY_MUL_16      0b00000010

#define TPS_PWR_GOOD_OK                 0b11111010

class EpdPmic
{
    public:
        EpdPmic();
        bool begin();
        void setRails(uint8_t _rails);
        void setVCOM(double vcom);
        double getVCOM();
        void setPowerOnSeq(uint8_t _upSeq, uint8_t _upSeqDelay);
        void setPowerOffSeq(uint8_t _dwnSeq, uint8_t _dwnSeqDelay);
        void programVCOM(double _vcom);
        int getTemperature();
        uint8_t getPwrgoodFlag();

    private:
        void readRegister(uint8_t _reg, uint8_t *_data, uint8_t _n);
        void writeRegister(uint8_t _reg, uint8_t *_data, uint8_t _n);
};

#endif