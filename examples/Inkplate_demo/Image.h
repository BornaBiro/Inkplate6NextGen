
/*******************************************************************************
* image
* filename: unsaved
* name: Image
*
* preset name: Monochrome
* data block size: 8 bit(s), uint8_t
* RLE compression enabled: no
* conversion type: Monochrome, Threshold Dither 86
* bits per pixel: 1
*
* preprocess:
*  main scan direction: left_to_right
*  line scan direction: forward
*  inverse: yes
*******************************************************************************/

/*
 typedef struct {
     const uint8_t *data;
     uint16_t width;
     uint16_t height;
     uint8_t dataSize;
     } tImage;
*/
#include <stdint.h>



static const uint8_t image_data_Image[288] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 
    0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
    0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
    0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
    0x78, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0x80, 
    0x78, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0x80, 
    0x78, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0x80, 
    0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
    0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
    0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
    0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc, 0x00, 
    0x08, 0x88, 0x44, 0x42, 0x20, 0x3f, 0xf8, 0x00, 
    0x08, 0x88, 0x44, 0x42, 0x20, 0x0f, 0xe0, 0x00, 
    0x08, 0x88, 0x44, 0x42, 0x20, 0x00, 0x00, 0x00, 
    0x08, 0x00, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 
    0x08, 0x00, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 
    0x08, 0x00, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 
    0x08, 0x00, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 
    0x08, 0x00, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 
    0x08, 0x00, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 
    0x08, 0x00, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 
    0x08, 0x00, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 
    0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const tImage Image = { image_data_Image, 36, 58,
    8 };

